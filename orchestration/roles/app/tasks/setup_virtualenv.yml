---

- name: Ensure virtualenvwrapper is installed
  pip: name=virtualenvwrapper executable="/usr/bin/pip3"

- name: Export WORKON_HOME in /root/.bashrc
  lineinfile: dest=/root/.bashrc line="export WORKON_HOME=/server/.virtualenvs"
  when: env != "vagrant"

- name: Export PROJECT_HOME in /root/.bashrc
  lineinfile: dest=/root/.bashrc line="export PROJECT_HOME=/server/Devel"
  when: env != "vagrant"

- name: Export VIRTUALENVWRAPPER_PYTHON in /root/.bashrc
  lineinfile: dest=/root/.bashrc line="export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3"
  when: env != "vagrant"

- name: Source virtualenvwrapper.sh in .bashrc
  lineinfile: dest=/root/.bashrc line="source /usr/local/bin/virtualenvwrapper.sh"
  when: env != "vagrant"

- name: Export WORKON_HOME in /root/.bashrc
  lineinfile: dest=/home/vagrant/.bashrc line="export WORKON_HOME=/server/.virtualenvs"
  when: env == "vagrant"

- name: Export PROJECT_HOME in /root/.bashrc
  lineinfile: dest=/home/vagrant/.bashrc line="export PROJECT_HOME=/server/Devel"
  when: env == "vagrant"

- name: Export VIRTUALENVWRAPPER_PYTHON in /root/.bashrc
  lineinfile: dest=/home/vagrant/.bashrc line="export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3"
  when: env == "vagrant"

- name: Source virtualenvwrapper.sh in .bashrc
  lineinfile: dest=/home/vagrant/.bashrc line="source /usr/local/bin/virtualenvwrapper.sh"
  when: env == "vagrant"

- name: Create the virtualenv
  command: virtualenv -p python3 {{ virtualenv_path }}
           creates={{ virtualenv_path }}/bin/activate

- name: Create the virtualenv postactivate script to set environment variables
  template: src=virtualenv_postactivate.j2
            dest={{ virtualenv_path }}/bin/postactivate
            owner={{ gunicorn_user }}
            group={{ gunicorn_group }}
            mode=0640
            backup=yes
  tags: deploy

- name: Copy 'workon {environment}' statement to '/root/.bashrc'
  lineinfile: dest=/home/vagrant/.bashrc line="workon {{ application_name }}"
  when: env == "vagrant"

- name: Copy 'cd /path/to/application' statement to '/root/.bashrc'
  lineinfile: dest=/home/vagrant/.bashrc line="cd {{ project_path }}"
  when: env == "vagrant"

- name: Copy 'workon {environment}' statement to '/root/.bashrc'
  lineinfile: dest=/root/.bashrc line="workon {{ application_name }}"
  when: env != "vagrant"

- name: Copy 'cd /path/to/application' statement to '/root/.bashrc'
  lineinfile: dest=/root/.bashrc line="cd {{ project_path }}"
  when: env != "vagrant"

- name: Set permission to virtualenv path
  file: path={{ virtualenv_path }}
        recurse=yes
        owner={{ gunicorn_user }}
        group={{ gunicorn_group }}
        state=directory

- name: Create symlink for repository for development
  file: src=/vagrant/{{application_name}} dest={{ project_path }} state=link
  when: env == "vagrant"

- name: Create directory for repository
  file: path={{ project_path }}
        state=directory
        owner={{ gunicorn_user }}
        group={{ gunicorn_user }}
  when: env != "vagrant"

- name: Create the maintenance page
  template: src=maintenance_off.html
            dest=/server/maintenance_off.html
            mode=0664


